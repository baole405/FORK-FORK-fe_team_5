# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/user/application_security/secret_detection/pipeline/configure
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - secret-detection
  - lint-commit
  - ci
  - deploy

variables:
  SECRET_DETECTION_ENABLED: "true"
  CI: "true"
  DOCKER_HOST: "unix:///var/run/docker.sock"

before_script:
  - echo $CI_JOB_TOKEN
  - echo $DOPPLER_TOKEN

secret_detection:
  stage: secret-detection
include:
  - template: Security/Secret-Detection.gitlab-ci.yml

lint-commit:
  image:
    name: registry.hub.docker.com/commitlint/commitlint:latest
    entrypoint: [""]
  stage: lint-commit
  script:
    - commitlint --from ${CI_MERGE_REQUEST_DIFF_BASE_SHA} --to ${CI_COMMIT_SHA}

ci:
  image: node:20
  stage: ci
  interruptible: true
  # MODIFIED: Changed 'only' to 'rules' to explicitly include the 'dev' branch
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
  before_script:
    - npm install --global corepack@latest
    - corepack enable
    - corepack prepare pnpm@latest-10 --activate
    - pnpm config set store-dir .pnpm-store
    - curl -Ls --tlsv1.2 --proto "=https" --retry 3 https://cli.doppler.com/install.sh | sh
  script:
    - pnpm install --frozen-lockfile
    - NX_HEAD=$CI_COMMIT_SHA
    - NX_BASE=${CI_MERGE_REQUEST_DIFF_BASE_SHA:-$CI_COMMIT_BEFORE_SHA}
    - doppler run --token=${DOPPLER_TOKEN} -- pnpm exec nx run-many -t lint test build -p fe-react-app --parallel=1 --verbose
    - pwd
    - ls -R
  artifacts:
    paths:
      - apps/fe-react-app/dist/**/*.*
    expire_in: 1 hour
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store

deploy_pages:
  stage: deploy
  image: node:20
  needs:
    - job: ci
      artifacts: true

  # MODIFIED: Updated rule to trigger deployment for both 'main' and 'dev' branches
  rules:
    - if: '$CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "dev"'
  script:
    - echo "ðŸš€ Verifying files..."
    - pwd
    - ls -R
    - echo "ðŸš€ Starting deployment for branch $CI_COMMIT_BRANCH"
    - npm install --global wrangler
    - wrangler pages deploy apps/fe-react-app/dist/ --project-name="fcinema" --branch="$CI_COMMIT_BRANCH"  --commit-dirty=true
    - echo "âœ… Deployment successful!"
