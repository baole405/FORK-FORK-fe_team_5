/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/users/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUser"];
        put: operations["update"];
        post?: never;
        delete: operations["delete"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/showtimes/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getShowtime"];
        put: operations["updateShowtime"];
        post?: never;
        delete: operations["deleteShowtime"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/promotions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getPromotion"];
        put: operations["updatePromotion"];
        post?: never;
        delete: operations["deletePromotion"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get"];
        put: operations["update_1"];
        post?: never;
        delete: operations["delete_1"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cinema-rooms/{roomId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["get_1"];
        put: operations["update_2"];
        post?: never;
        delete: operations["delete_2"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/seats/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSeatById"];
        put: operations["updateSeat"];
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/users": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getUsers"];
        put?: never;
        post: operations["createUser"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/showtimes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllShowtimes"];
        put?: never;
        post: operations["createShowtime"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/promotions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllPromotions"];
        put?: never;
        post: operations["createPromotion"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAll"];
        put?: never;
        post: operations["create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/cinema-rooms": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAll_1"];
        put?: never;
        post: operations["create_1"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/introspect": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["introspect"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/authenticate": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["authenticate"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/media/upload": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["uploadImage"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/showtimes/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["searchShowtimes"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/showtimes/room/{roomId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getShowtimesByCinemaRoom"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/showtimes/movie/{movieId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getShowtimesByMovie"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/movies/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["searchMovies"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/seats": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getAllSeats"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/seats/room/{roomId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["getSeatsByCinemaRoomId"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        UserUpdate: {
            fullName?: string;
            phone?: string;
            address?: string;
            avatar?: string;
            role?: string;
            active?: boolean;
        };
        ApiResponseVoid: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: unknown;
        };
        ShowtimeUpdateRequest: {
            /** Format: date-time */
            showDateTime?: string;
            /** Format: date-time */
            endDateTime?: string;
            status?: string;
        };
        ApiResponseShowtimeResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["ShowtimeResponse"];
        };
        ShowtimeResponse: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            movieId?: number;
            /** Format: date-time */
            showDateTime?: string;
            /** Format: int32 */
            cinemaRoomId?: number;
            /** Format: date-time */
            endDateTime?: string;
            status?: string;
        };
        PromotionUpdateRequest: {
            image?: string;
            title?: string;
            type?: string;
            /** Format: double */
            minPurchase?: number;
            /** Format: double */
            discountValue?: number;
            /** Format: date-time */
            startTime?: string;
            /** Format: date-time */
            endTime?: string;
            description?: string;
            status?: string;
        };
        ApiResponsePromotionResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["PromotionResponse"];
        };
        PromotionResponse: {
            /** Format: int64 */
            id?: number;
            image?: string;
            title?: string;
            type?: string;
            /** Format: double */
            minPurchase?: number;
            /** Format: double */
            discountValue?: number;
            /** Format: date-time */
            startTime?: string;
            /** Format: date-time */
            endTime?: string;
            description?: string;
            status?: string;
        };
        MovieUpdateRequest: {
            name?: string;
            /** Format: int32 */
            ageRestrict?: number;
            /** Format: date */
            fromDate?: string;
            /** Format: date */
            toDate?: string;
            actor?: string;
            studio?: string;
            director?: string;
            /** Format: int32 */
            duration?: number;
            version?: string;
            trailer?: string;
            type?: string;
            description?: string;
            status?: string;
            poster?: string;
        };
        ApiResponseMovieResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["MovieResponse"];
        };
        MovieResponse: {
            /** Format: int32 */
            id?: number;
            name?: string;
            /** Format: int32 */
            ageRestrict?: number;
            fromDate?: string;
            toDate?: string;
            actor?: string;
            studio?: string;
            director?: string;
            /** Format: int32 */
            duration?: number;
            version?: string;
            trailer?: string;
            type?: string;
            description?: string;
            status?: string;
            poster?: string;
            showtimes?: components["schemas"]["ShowtimeResponse"][];
        };
        CinemaRoomUpdateRequest: {
            /** Format: int32 */
            roomNumber?: number;
            type?: string;
            /** Format: double */
            fee?: number;
            /** Format: int32 */
            capacity?: number;
            status?: string;
            /** Format: int32 */
            width?: number;
            /** Format: int32 */
            length?: number;
        };
        ApiResponseCinemaRoomResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["CinemaRoomResponse"];
        };
        CinemaRoomResponse: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            roomNumber?: number;
            type?: string;
            /** Format: double */
            fee?: number;
            /** Format: int32 */
            capacity?: number;
            status?: string;
            /** Format: int32 */
            width?: number;
            /** Format: int32 */
            length?: number;
            seats?: components["schemas"]["SeatResponse"][];
        };
        SeatResponse: {
            /** Format: int32 */
            id?: number;
            /** Format: int32 */
            roomId?: number;
            row?: string;
            column?: string;
            name?: string;
            type?: string;
            status?: string;
        };
        SeatRequest: {
            type?: string;
            status?: string;
        };
        ApiResponseSeatResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["SeatResponse"];
        };
        UserRequest: {
            email: string;
            fullName: string;
            password: string;
            phone?: string;
            role?: string;
            /** Format: date */
            dateOfBirth?: string;
        };
        ApiResponseUserResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["UserResponse"];
        };
        UserResponse: {
            id?: string;
            email?: string;
            fullName?: string;
            phone?: string;
            address?: string;
            avatar?: string;
            role?: string;
            active?: boolean;
        };
        ShowtimeRequest: {
            /** Format: int32 */
            movieId?: number;
            /** Format: date-time */
            showDateTime?: string;
            /** Format: int32 */
            roomId?: number;
            /** Format: date-time */
            endDateTime?: string;
        };
        PromotionRequest: {
            image?: string;
            title: string;
            type: string;
            /** Format: double */
            minPurchase: number;
            /** Format: double */
            discountValue: number;
            /** Format: date-time */
            startTime: string;
            /** Format: date-time */
            endTime: string;
            description: string;
            status: string;
        };
        MovieRequest: {
            name: string;
            /** Format: int32 */
            ageRestrict: number;
            /** Format: date */
            fromDate: string;
            /** Format: date */
            toDate: string;
            actor: string;
            studio: string;
            director: string;
            /** Format: int32 */
            duration?: number;
            version: string;
            trailer: string;
            type: string;
            description: string;
            status: string;
            poster: string;
        };
        CinemaRoomRequest: {
            /** Format: int32 */
            roomNumber: number;
            type: string;
            /** Format: double */
            fee: number;
            /** Format: int32 */
            capacity: number;
            /** Format: int32 */
            width: number;
            /** Format: int32 */
            length: number;
        };
        IntrospectRequest: {
            token?: string;
        };
        ApiResponseIntrospectResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["IntrospectResponse"];
        };
        IntrospectResponse: {
            valid?: boolean;
        };
        AuthenticationRequest: {
            email: string;
            password: string;
        };
        ApiResponseAuthenticationResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["AuthenticationResponse"];
        };
        AuthenticationResponse: {
            token?: string;
            /** @enum {string} */
            roles?: "ADMIN" | "STAFF" | "MEMBER";
            fullName?: string;
            id?: string;
        };
        ApiResponseListUserResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["UserResponse"][];
        };
        ApiResponseListShowtimeResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["ShowtimeResponse"][];
        };
        ApiResponsePageResponseShowtimeResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["PageResponseShowtimeResponse"];
        };
        PageResponseShowtimeResponse: {
            content?: components["schemas"]["ShowtimeResponse"][];
            /** Format: int32 */
            pageNo?: number;
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            totalElements?: number;
            /** Format: int32 */
            totalPages?: number;
            last?: boolean;
        };
        ApiResponseListPromotionResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["PromotionResponse"][];
        };
        ApiResponseListMovieResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["MovieResponse"][];
        };
        ApiResponsePageResponseMovieResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["PageResponseMovieResponse"];
        };
        PageResponseMovieResponse: {
            content?: components["schemas"]["MovieResponse"][];
            /** Format: int32 */
            pageNo?: number;
            /** Format: int32 */
            pageSize?: number;
            /** Format: int64 */
            totalElements?: number;
            /** Format: int32 */
            totalPages?: number;
            last?: boolean;
        };
        ApiResponseListCinemaRoomResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["CinemaRoomResponse"][];
        };
        ApiResponseListSeatResponse: {
            /** Format: int32 */
            code?: number;
            message?: string;
            result?: components["schemas"]["SeatResponse"][];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    getUser: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseUserResponse"];
                };
            };
        };
    };
    update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserUpdate"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseVoid"];
                };
            };
        };
    };
    delete: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseVoid"];
                };
            };
        };
    };
    getShowtime: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseShowtimeResponse"];
                };
            };
        };
    };
    updateShowtime: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShowtimeUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseShowtimeResponse"];
                };
            };
        };
    };
    deleteShowtime: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseVoid"];
                };
            };
        };
    };
    getPromotion: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponsePromotionResponse"];
                };
            };
        };
    };
    updatePromotion: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PromotionUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponsePromotionResponse"];
                };
            };
        };
    };
    deletePromotion: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseVoid"];
                };
            };
        };
    };
    get: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseMovieResponse"];
                };
            };
        };
    };
    update_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MovieUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseMovieResponse"];
                };
            };
        };
    };
    delete_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseVoid"];
                };
            };
        };
    };
    get_1: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseCinemaRoomResponse"];
                };
            };
        };
    };
    update_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CinemaRoomUpdateRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseCinemaRoomResponse"];
                };
            };
        };
    };
    delete_2: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseVoid"];
                };
            };
        };
    };
    getSeatById: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseSeatResponse"];
                };
            };
        };
    };
    updateSeat: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SeatRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseSeatResponse"];
                };
            };
        };
    };
    getUsers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListUserResponse"];
                };
            };
        };
    };
    createUser: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseUserResponse"];
                };
            };
        };
    };
    getAllShowtimes: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListShowtimeResponse"];
                };
            };
        };
    };
    createShowtime: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ShowtimeRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseShowtimeResponse"];
                };
            };
        };
    };
    getAllPromotions: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListPromotionResponse"];
                };
            };
        };
    };
    createPromotion: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["PromotionRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponsePromotionResponse"];
                };
            };
        };
    };
    getAll: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListMovieResponse"];
                };
            };
        };
    };
    create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MovieRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseMovieResponse"];
                };
            };
        };
    };
    getAll_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListCinemaRoomResponse"];
                };
            };
        };
    };
    create_1: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CinemaRoomRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseCinemaRoomResponse"];
                };
            };
        };
    };
    introspect: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["IntrospectRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseIntrospectResponse"];
                };
            };
        };
    };
    authenticate: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthenticationRequest"];
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseAuthenticationResponse"];
                };
            };
        };
    };
    uploadImage: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": {
                    /** Format: binary */
                    file: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    searchShowtimes: {
        parameters: {
            query?: {
                movieId?: number;
                roomId?: number;
                startDate?: string;
                endDate?: string;
                status?: string;
                pageNo?: number;
                pageSize?: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponsePageResponseShowtimeResponse"];
                };
            };
        };
    };
    getShowtimesByCinemaRoom: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListShowtimeResponse"];
                };
            };
        };
    };
    getShowtimesByMovie: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                movieId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListShowtimeResponse"];
                };
            };
        };
    };
    searchMovies: {
        parameters: {
            query?: {
                pageNo?: number;
                pageSize?: number;
                search?: string;
                fromDate?: string;
                toDate?: string;
                type?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponsePageResponseMovieResponse"];
                };
            };
        };
    };
    getAllSeats: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListSeatResponse"];
                };
            };
        };
    };
    getSeatsByCinemaRoomId: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                roomId: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ApiResponseListSeatResponse"];
                };
            };
        };
    };
}
